#!/bin/bash -ex

# This script runs the integration tests on an already configured LXD machine
# where the tests are run LXD in LXD.  i.e. an LXD container is spawned, pylxd
# is copied into the container, and then the container runs the integration
# tests.

# This script is NOT used by the CI system, but for people to run integration
# tests on their own computers where they don't want the integration test to
# mess with their setup.

DIR="$(realpath "$(dirname "${BASH_SOURCE[0]}")")"

function _run_tests {
	local target=${1}

	local image_release
	case "$target" in
		bionic) image_release="18.04" ;;
		focal) image_release="20.04" ;;
	esac
	local container_name
    container_name="pylxd-$target-$(uuidgen | cut -d- -f1)"
	local container_image="ubuntu:${image_release}"
	echo "Running ${image_release} integration tests"

	lxc launch "$container_image" "$container_name" -c security.nesting=true
	lxc exec "$container_name" -- cloud-init status --long --wait

	lxc exec "$container_name" -- mkdir -p /opt/pylxd
	# NOTE: rockstar (13 Sep 2016) - --recursive is not supported in lxd <2.1, so
	# until we have pervasive support for that, we'll do this tar hack.
	local ldir="$DIR/.."
	cd "$ldir" && tar cf - ./* .git | lxc exec "$container_name" -- tar xf - -C /opt/pylxd
	cd "$DIR"
	lxc exec "$container_name" -- /bin/sh -c "cd /opt/pylxd && integration/run-integration-tests"

	lxc delete --force "$container_name"
}

# run Bionic and then Focal integration tests
_run_tests bionic
_run_tests focal
